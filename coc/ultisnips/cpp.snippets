# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet ctor_copy_move "Explicit default copy+move ctor" b
${1}(const ${1}&) = default;
${1}& operator=(const ${1}&) = default;
${1}(${1}&&) = default;
${1}& operator=(${1}&&) = default;
~${1}() = default;
endsnippet

snippet ctor_move_only "move only ctor" b
${1}(const ${1}&) = delete;
${1}& operator=(const ${1}&) = delete;
${1}(${1}&&) = delete;
${1}& operator=(${1}&&) = delete;
~${1}() = default;
endsnippet

snippet ctor_delete_copy_move "immoveable ctor" b
${1}(const ${1}&) = delete;
${1}& operator=(const ${1}&) = delete;
${1}(${1}&&) = delete;
${1}& operator=(${1}&&) = delete;
~${1}() = default;
endsnippet
