#!/usr/bin/env python3

import subprocess
from subprocess import DEVNULL
from pathlib import Path
import argparse
import sys
import json
from urllib.parse import urlparse, unquote
from pathlib import PurePosixPath
import random

parser = argparse.ArgumentParser()
parser.add_argument("pr", nargs="?", type=int, default=None)
args = parser.parse_args()


def gh(cmd):
    output = subprocess.check_output(["gh", *cmd])
    return json.loads(output)

def default_pr():
    output = subprocess.check_output(["git", "log", "--format=%B", "-n", "1", "HEAD"], text=True)
    for line in output.splitlines():
        if not line.startswith("Pull Request: "):
            continue
        full_url = line.removeprefix("Pull Request: ")
        # Pull out just the PR number from the full url (last path segment)
        return PurePosixPath(unquote(urlparse(full_url).path)).parts[-1]
    return None

pr = args.pr or default_pr()

if pr == None:
    raise Exception("Unable to determine PR automatically")

all_preview_labels = {
    label["name"]
    for label in gh(["label", "list", "--json", "name"])
    if label["name"].startswith("preview-")
}

all_taken_labels = {
        label["name"]
        for pr in gh(["pr", "list", "--json", "labels"])
        for label in pr["labels"]
}

all_available_labels = list(all_preview_labels.difference(all_taken_labels))

if len(all_available_labels) == 0:
    raise Exception("No available labels")

selected = random.choice(all_available_labels)

print("Applying label:", selected)

subprocess.check_call([
    "gh",
    "pr",
    "edit",
    pr,
    "--add-label",
    selected
])
